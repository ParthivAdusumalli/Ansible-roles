- name: Disabling NodeJs
  ansible.builtin.command: "dnf module disable nodejs -y"

- name: Enabling NodeJS v20
  ansible.builtin.command: "dnf module enable nodejs:20 -y"

- name: Installing NodeJS and MySQL
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - nodejs
    - mysql

- name: Adding User expense
  ansible.builtin.user:
    name: expense
    state: present
    home: /home/expense
    shell: /bin/bash

- name: Creating App Directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: Downloading Source Code
  ansible.builtin.get_url:
    url: "https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip"
    dest: "/tmp/backend.zip"

- name: Extracting Zip file
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes  # FIXED ERROR

- name: Installing NPM dependencies
  community.general.npm: #See this New module. It will make NPM installs only once at /app location
    path: /app  # FIXED ERROR

- name: Configuring Backend.service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service
  notify: Reload Daemon

- name: Flushing Handler
  meta: flush_handlers

- name: Starting and Enabling Backend Service
  service:
    name: backend
    state: started
    enabled: yes

- name: Installing Python libraries
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
    - cryptography
    - pymysql

- name: Import MySQL Data
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: "{{ MYSQL_USER }}"
    login_password: "{{ MYSQL_PASSWORD }}"
    login_host: "{{ MYSQL_HOST }}"
    target: /app/schema/backend.sql

- name: Restarting backend service
  ansible.builtin.service:
    name: backend
    state: restarted
